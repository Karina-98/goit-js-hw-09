{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAoCA,SAASC,EAAcC,EAAUC,GAC7B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IA1CIQ,SAASC,cAAc,SAI/BC,iBAAiB,UAAU,SAACC,GAC/BA,EAAEC,iBAQF,IANC,IAAIC,EAAQC,SAASH,EAAEI,OAAOC,SAAShB,MAAMiB,OACtCC,EAAOJ,SAASH,EAAEI,OAAOC,SAASE,KAAKD,OACvCE,EAASL,SAASH,EAAEI,OAAOC,SAASG,OAAOF,OAI1CG,EAAI,EAAGA,GAAKD,EAAQC,GAAI,EAE/BtB,EAAcsB,EAAGP,GACdQ,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAEnBuB,EAAA3B,GAAS4B,OAAOC,QACZ,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAGrD2B,OAAM,SAAAL,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAElBuB,EAAA3B,GAAS4B,OAAOI,QACV,sBAAqCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,O,IAIjDa,GAASK,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\n\nconst form = document.querySelector('.form');\n\n\n\nform.addEventListener('submit', (e) => { \n  e.preventDefault();\n  \n   let delay = parseInt(e.target.elements.delay.value);\n    const step = parseInt(e.target.elements.step.value);\n    const amount = parseInt(e.target.elements.amount.value);\n  \n  \n  \n  for (let i = 1; i <= amount; i+= 1) {\n    \n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n    // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n  })\n  .catch(({ position, delay }) => {\n  //   console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay} ms`\n    );\n    \n  })\n    delay += step;\n  }\n})\n\nfunction createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay })\n        } else {\n          reject({ position, delay })\n        }\n      }, delay);\n    });\n  };\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","e","preventDefault","delay1","parseInt","target","elements","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.336184e1.js.map"}